#!/bin/bash

declare -r EOL=$'\n' TAB=$'\t'

function set_status() {
	local status=$1
	local message=$2

	start="\r["
	if [[ "$status" != "0" ]] ; then
		if [[ "$message" = *$EOL* ]]; then
			echo -e "${start}\e[31m✗\e[0m"
			echo "$message"
		else
			echo -n ": $message"
			echo -e "${start}\e[31m✗\e[0m"
		fi

	else
		echo -e "${start}\e[32m✓\e[0m"
	fi
}

for host in $@ ; do
	echo -n "[ ] $host"
	out=`ssh "$host" '/bin/bash /dev/stdin' 2>&1 <<'BASH'
set -e

function die() {
	echo -e "$2"
	exit $1
}

git_remote="https://bitbucket.org/tim_heap/.dot-files.git/"
dot_files="$HOME/.dot-files/"

[[ -n "$( which git )" ]] || die 1 "git is not installed"

if [[ ! -d "$dot_files" ]] ; then
	git clone "$git_remote" "$dot_files" || die 1 "Could not clone $git_remote to $dot_files"
fi
cd "$dot_files"

git diff  --ignore-submodules || die 2 "$dot_files has uncommitted changes"

git fetch  origin || die 3 "Could not fetch from remote origin"
git merge  --ff-only origin/master || die 4 "Could not fast-forward merge"
git submodule sync
git submodule update --init || die 5 "Could not update submodules"

"$dot_files"/create-links &>/dev/null || die 6 "Could not link in files"

echo -e ""
BASH
	`
	exit_code=$?

	set_status "$exit_code" "$out"

done
