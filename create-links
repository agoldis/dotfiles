#!/bin/bash

do_not_link=("Readme.md" "docs" "create-links" "update-dot-files")


here=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

element_in () {
	local e
	for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
	return 1
}



for target in "$here/"[a-zA-Z]* ; do
	basename=$( basename "$target" )
	link="$HOME/.$basename"

	if element_in "$basename" "${do_not_link[@]}" ; then
		# Bail on some files we do not want
		continue
	fi

	if [[ -h "$link" && $( readlink "$link" ) == "$target" ]] ; then
		# Bail if the symlink exists already, and points to the correct place
		continue
	fi

	echo "Linking \`$link' -> \`$target'"

	if [[ -h "$link" ]] ; then
		echo "  Removing existing symbolic link \`$link' -> \`$( readlink -e "$link" )'"
		rm "$link"
	fi

	if [[ -a "$link" ]] ; then
		echo "  \`$link exists. Moving it to \`$link.back"
		mv "$link" "$link.back" || echo "  Couldn't move \`$link' to \`$link.back'!"
	fi

	ln -s "$target" "$link" || echo "  Couldn't link \`$link' to \`$target'"
done

unset broken_link
while IFS= read -r -u3 -d $'\0' broken_link; do
	target=$( readlink "$broken_link" )
	if [[ "$target" == "$here"/* ]] ; then
		echo "Removing dangling symlink \`$broken_link' -> \`$target'"
		rm $broken_link
	fi
done 3< <( find $HOME -maxdepth 1 -type l -xtype l -print0 )
